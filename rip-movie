#!/bin/bash -

### Rip Movie
### =========
###
### Rip a movie from a DVD using Handbrake.
###
### `rip-movie -h` for more.


## Variables

aspect_ratio=false
bitrate=1800
bufsize=12500
add_aac=false
foreign=false
scan=false
use_TMDb=false
constant_frame_rate=auto
subtitle_track="scan"
language="eng"
outputdir="$HOME/Movies/"


## Functions

_show_help() {
    printf -- "rip-movie [-17abcdflrso] title\n\n"
    printf -- "Options (and defaults):\n\n"
    printf -- "-1: set x264 bitrate and bufsize values to those for 1080p content\n"
    printf -- "-7: set x264 bitrate and bufsize values to those for 720p content\n"
    printf -- "-a: instead of an AC3 track only, add AAC as the first track\n"
    printf -- "-b: rate: video bitrate (${bitrate})\n"
    printf -- "-c: variable_frame_rate: enable variable frame rate (${constant_frame_rate})\n"
    printf -- "-d: set the movie filename to its name and year using TMDb\n"
    printf -- "-f: assume a foreign film and include all subtitles, not just those that are forced\n"
    printf -- "-l language: iso639-2 language to use for subtitles (and audio if not foreign) (${language})\n"
    printf -- "-r pixel_aspect_ratio: colon-separated ratio (e.g., 16:9) (${aspect_ratio})\n"
    printf -- "-s subtitle_track: subtitle track to rip (${subtitle_track})\n"
    printf -- "-o dir: output directory (with trailing slash) (${outputdir})\n\n"
    exit 2
}

_report_error () {
    printf "$(basename $0): $1.\n" >&2
    exit 1
}


## Option parsing

while getopts :17ab:c:dr:s:fl:t:o:h opt; do
    case "$opt" in
        1)    bitrate=5000
              bufsize=25000
              ;;
        7)    bitrate=4000
              bufsize=17500
              ;;
        a)    add_aac=true
              ;;
        b)    bitrate="$OPTARG"
              ;;
        c)    constant_frame_rate="$OPTARG"
              ;;
        d)    use_TMDb=true
              ;;
        f)    foreign=true
              ;;
        l)    language="$OPTARG"
              ;;
        r)    aspect_ratio="$OPTARG"
              ;;
        s)    subtitle_track="$OPTARG"
              ;;
        t)    title="$OPTARG"
              ;;
        o)    outputdir="$OPTARG"
              ;;
        h)    _show_help
              ;;
        '?')  _report_error "invalid option $OPTARG. rip-movie -h for more info"
              ;;
    esac
done

shift $((OPTIND-1)) # Forget single-letter options now; put main options to front


## Main logic

source="$1"

if [[ -z $1 ]] && ! "$use_TMDb"; then
    _report_error "no output file name found"
fi
movie="$*" # Collect all args as one string together
if "$use_TMDb"; then
    movie=$(find-movie "${source%.*}" 2>/dev/null).mkv
    if [[ $? -gt 0 ]]; then
        _report_error "Movie name not found in TMDb"
    fi
fi

# Detect source video properties with mediainfo
media_info=$(mediainfo "$source")
media_info_ar=$(grep -F 'Display aspect ratio' <<< "$media_info" | cut -d: -f2-)
media_info_fm=$(grep -F 'Frame rate mode' <<< "$media_info" | cut -d: -f2-)
media_info_fr=$(grep -F 'Frame rate' <<< "$media_info" | grep -vF mode | cut -d: -f2- | cut -d' ' -f2)

video_settings="-e x264 -f mkv --modulus 2 -m --x264-preset fast --h264-profile high --h264-level 4.1 -x ratetol=inf:vbv-maxrate=${bufsize}:vbv-bufsize=${bufsize} -b ${bitrate} --decomb -N${language} --subtitle-default -s ${subtitle_track}"

if ! "$foreign"; then
    # "Film isn't foreign, so find the forced subtitles only"
    video_settings="${video_settings} -F --native-dub"
fi

if [[ "$aspect_ratio" == "false" ]]; then
    video_settings="${video_settings} --strict-anamorphic"
elif [[ "$aspect_ratio" == "auto" ]]; then
    video_settings="${video_settings} --custom-anamorphic --pixel-aspect ${media_info_ar}"
else
    video_settings="${video_settings} --custom-anamorphic --pixel-aspect ${aspect_ratio}"
fi

if [[ "$constant_frame_rate" == "auto" ]]; then
    if grep -F Constant <<< "$media_info_fm" 2>&1 > /dev/null; then
        video_settings="${video_settings} --cfr -r${media_info_fr}"
    else
        video_settings="${video_settings} --vfr"
    fi
else
    video_settings="${video_settings} --cfr -r${constant_frame_rate}"
fi

audio_settings='-R Auto -D 0.0 --audio-fallback ca_aac'

if "$add_aac"; then
    audio_settings="${audio_settings} -6 dpl2,none -E ca_aac,copy:ac3 -B 160"
else
    audio_settings="${audio_settings} -6 none -E copy:ac3"
fi

HandBrakeCLI -i "$source" -t1 -o "${outputdir}${movie}" ${video_settings} ${audio_settings}
